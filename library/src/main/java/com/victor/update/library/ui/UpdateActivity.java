package com.victor.update.library.ui;import android.content.ComponentName;import android.content.Intent;import android.content.ServiceConnection;import android.content.pm.ApplicationInfo;import android.content.pm.PackageManager;import android.net.Uri;import android.os.Bundle;import android.os.Handler;import android.os.IBinder;import android.os.Message;import android.support.v7.app.AppCompatActivity;import android.text.TextUtils;import android.util.Log;import android.widget.Toast;import org.json.JSONObject;import java.io.File;import java.util.Observable;import java.util.Observer;import com.victor.update.library.R;import com.victor.update.library.data.UpdateData;import com.victor.update.library.interfaces.OnDownloadProgressListener;import com.victor.update.library.interfaces.OnUpdateCompleteListener;import com.victor.update.library.model.CheckUpdateTask;import com.victor.update.library.model.DataObservable;import com.victor.update.library.model.DownLoadTask;import com.victor.update.library.model.UpdateService;import com.victor.update.library.util.AppUtil;import com.victor.update.library.util.Constant;public class UpdateActivity extends AppCompatActivity implements Observer {    private String TAG = "UpdateActivity";    private UpdateData info;    Handler mHandler = new Handler (){        @Override        public void handleMessage(Message msg) {            switch (msg.what) {                case Constant.Msg.INSTALL:                    installApk();                    break;            }        }    };    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_update);        initialize();        startCheckService();    }    private void initialize () {        DataObservable.getInstance().addObserver(this);    }    private void startCheckService () {        Log.e(TAG,"startCheckService()......");        Intent intent = new Intent();        intent.setAction(Constant.SERVICE_ACTION);        intent.setPackage(getPackageName());        startService(intent);    }    private void stopCheckService () {        Log.e(TAG,"stopCheckService()......");        Intent intent = new Intent();        intent.setAction(Constant.SERVICE_ACTION);        intent.setPackage(getPackageName());        stopService(intent);    }    private void installApk () {        if (info != null) {            Toast.makeText(getApplicationContext(),"即将安装：" + info.getAppName(),Toast.LENGTH_SHORT).show();            Uri uri = Uri.parse("file://" + new File("/sdcard/" + info.getAppName() + ".apk"));            Intent intent = new Intent(Intent.ACTION_VIEW);            intent.setDataAndType(uri,"application/vnd.android.package-archive");            startActivity(intent);        }    }    @Override    protected void onDestroy() {        DataObservable.getInstance().deleteObserver(this);        super.onDestroy();        stopCheckService();    }    @Override    public void update(Observable observable, Object data) {        if (data instanceof UpdateData) {            info = (UpdateData) data;            if (info.getProgress() == 100) {                mHandler.sendEmptyMessage(Constant.Msg.INSTALL);            }        }    }}